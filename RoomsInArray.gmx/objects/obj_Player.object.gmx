<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_Player</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=-y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set depth for isometric view
depth=-y

//Movement
hspeed=2*(keyboard_check(ord('D'))-keyboard_check(ord('A')));
vspeed=1*(keyboard_check(ord('S'))-keyboard_check(ord('W')));
speed=3*(speed!=0);

//Make character sprite look at cursor
//Down
if (point_direction (self.x, self.y, mouse_x, mouse_y) &gt; 240 &amp;&amp; point_direction (self.x, self.y, mouse_x, mouse_y) &lt; 300 )
{
image_index = 0;
}
//DownRight
if (point_direction (self.x, self.y, mouse_x, mouse_y) &gt; 300 &amp;&amp; point_direction (self.x, self.y, mouse_x, mouse_y) &lt; 345 )
{
image_index = 1;
}
//Right
if (point_direction (self.x, self.y, mouse_x, mouse_y) &gt; 345 || (point_direction (self.x, self.y, mouse_x, mouse_y) &gt; 0 &amp;&amp; point_direction (self.x, self.y, mouse_x, mouse_y) &lt; 15  ))
{
image_index = 2;
}
//UpRight
if (point_direction (self.x, self.y, mouse_x, mouse_y) &gt; 15 &amp;&amp; point_direction (self.x, self.y, mouse_x, mouse_y) &lt; 60 )
{
image_index = 3;
}
//Up
if (point_direction (self.x, self.y, mouse_x, mouse_y) &gt; 60 &amp;&amp; point_direction (self.x, self.y, mouse_x, mouse_y) &lt; 120 )
{
image_index = 4;
}
//UpLeft
if (point_direction (self.x, self.y, mouse_x, mouse_y) &gt; 120 &amp;&amp; point_direction (self.x, self.y, mouse_x, mouse_y) &lt; 165 )
{
image_index = 5;
}
//Left
if (point_direction (self.x, self.y, mouse_x, mouse_y) &gt; 165 &amp;&amp; point_direction (self.x, self.y, mouse_x, mouse_y) &lt; 195 )
{
image_index = 6;
}
//DownLeft
if (point_direction (self.x, self.y, mouse_x, mouse_y) &gt; 195 &amp;&amp; point_direction (self.x, self.y, mouse_x, mouse_y) &lt; 240 )
{
image_index = 7;
}


//Set player location to nearest pixel, helps with fidgeting when moving diagonally
obj_Player.x=4*round(x/4)
obj_Player.y=2*round(y/2)

//Collision with solids
if hspeed!=0
if !place_free(x+hspeed,y)
{
    if hspeed&gt;0 move_contact_solid(0,hspeed)
    if hspeed&lt;0 move_contact_solid(180,-hspeed)
    hspeed=0
}

if vspeed!=0
if !place_free(x+hspeed,y+vspeed)
{
    if vspeed&gt;0 move_contact_solid(270,vspeed)
    if vspeed&lt;0 move_contact_solid(90,-vspeed)
    vspeed=0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
